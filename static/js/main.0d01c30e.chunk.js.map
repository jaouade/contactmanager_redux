{"version":3,"sources":["services/contactService.js","components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["BASE_URL","contactService","all","_all","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","add","_add","_callee2","contact","_context2","post","_x","deleteById","_deleteById","_callee3","id","_context3","delete","concat","_x2","update","_update","_callee4","updContact","_context4","put","_x3","getOne","_getOne","_callee5","_context5","_x4","Contact","state","showContactInfo","onDeleteClick","_this","props","deleteContact","_this2","_this$props$contact","name","email","phone","react_default","createElement","className","onClick","setState","style","cursor","float","color","bind","Link","to","marginRight","Component","connect","_ref2","dispatch","type","payload","Contacts","getContacts","contacts","Fragment","map","contacts_Contact","key","_ref","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","_ref3","EditContact","match","params","updateContact","nextProps","nextState","_nextProps$contact","toBeUpdatedContact","_ref5","_x5","_ref4","Header","branding","About","NotFound","initialState","combineReducers","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","BrowserRouter","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0d01c30e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://jsonplaceholder.typicode.com/users/';\r\n\r\nexport default {\r\n  all: async () => {\r\n    const res = await axios.get(BASE_URL);\r\n    return res.data;\r\n  },\r\n  add: async contact => {\r\n    const res = await axios.post(BASE_URL, contact);\r\n    return res.data;\r\n  },\r\n\r\n  deleteById: async id => {\r\n    const res = await axios.delete(`${BASE_URL}${id}`);\r\n    return res.data;\r\n  },\r\n\r\n  update: async updContact => {\r\n    const res = await axios.put(`${BASE_URL}${updContact.id}`, updContact);\r\n    return res.data;\r\n  },\r\n  getOne: async id => {\r\n    const res = await axios.get(`${BASE_URL}${id}`);\r\n    return res.data;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../actions/contactActions';\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{' '}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem'\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteContact }\n)(Contact);\n","import {\r\n  GET_CONTACTS,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  EDIT_CONTACT,\r\n  GET_CONTACT\r\n} from './types';\r\nimport contactService from '../services/contactService';\r\nexport const getContacts = () => async dispatch => {\r\n  const contacts = await contactService.all();\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: contacts\r\n  });\r\n};\r\nexport const deleteContact = id => async dispatch => {\r\n  await contactService.deleteById(id);\r\n  dispatch({\r\n    type: DELETE_CONTACT,\r\n    payload: id\r\n  });\r\n};\r\nexport const addContact = newContact => async dispatch => {\r\n  const contact = await contactService.add(newContact);\r\n\r\n  dispatch({\r\n    type: ADD_CONTACT,\r\n    payload: contact\r\n  });\r\n};\r\nexport const updateContact = newContact => async dispatch => {\r\n  const contact = await contactService.update(newContact);\r\n\r\n  dispatch({\r\n    type: EDIT_CONTACT,\r\n    payload: contact\r\n  });\r\n};\r\nexport const getOne = id => async dispatch => {\r\n  const contact = await contactService.getOne(id);\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: contact\r\n  });\r\n};\r\n","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const EDIT_CONTACT = 'EDIT_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport { getContacts } from '../../actions/contactActions';\nimport PropTypes from 'prop-types';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    return this.props.getContacts();\n  }\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts\n});\nexport default connect(\n  mapStateToProps,\n  { getContacts }\n)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../actions/contactActions';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { addContact }\n)(AddContact);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { getOne, updateContact } from '../../actions/contactActions';\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getOne(id);\n  }\n  componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    const updContact = {\n      id,\n      name,\n      email,\n      phone\n    };\n    this.props.updateContact(updContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nEditContact.propTypes = {\n  getOne: PropTypes.func.isRequired,\n  updateContact: PropTypes.func.isRequired,\n  contact: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  contact: state.contact.toBeUpdatedContact\n});\nexport default connect(\n  mapStateToProps,\n  { getOne, updateContact }\n)(EditContact);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import {\r\n  GET_CONTACTS,\r\n  GET_CONTACT,\r\n  ADD_CONTACT,\r\n  EDIT_CONTACT,\r\n  DELETE_CONTACT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  toBeUpdatedContact: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return { ...state, contacts: action.payload };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        toBeUpdatedContact: action.payload\r\n      };\r\n    case EDIT_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport contactReducer from './contactReducer';\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\nexport default store;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}